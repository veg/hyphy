/Users/sergei/Development/hyphy/src/core/polynoml.cpp:257:3: warning: Null pointer passed as 2nd argument to memory copy function [clang-analyzer-unix.cstring.NullArg]
  257 |   memcpy(thePowers + actTerms * numberVars, theTerm, sizeof(long) * numberVars);
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:942:7: note: Assuming 'objectT' is equal to NUMBER
  942 |   if (objectT == NUMBER) { // a number
      |       ^~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:942:3: note: Taking true branch
  942 |   if (objectT == NUMBER) { // a number
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:945:18: note: Assuming 'subtract' is false
  945 |     hyFloat mV = subtract ? -m->Value() : m->Value();
      |                  ^~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:945:18: note: '?' condition is false
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:947:5: note: Taking true branch
  947 |     if (variableIndex.empty()) { // constant poly
      |     ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:948:7: note: Taking false branch
  948 |       if (theTerms->NumberOfTerms()) {
      |       ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:952:13: note: Assuming the condition is true
  952 |         if (mV != 0.0) {
      |             ^~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:952:9: note: Taking true branch
  952 |         if (mV != 0.0) {
      |         ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:953:37: note: Passing null pointer value via 1st parameter 'theTerm'
  953 |           result->theTerms->AddTerm(nil, mV);
      |                                     ^
/Users/sergei/Development/hyphy/src/core/include/defines.h:55:15: note: expanded from macro 'nil'
   55 | #define nil   NULL
      |               ^~~~
/opt/homebrew/Cellar/llvm/20.1.7/lib/clang/20/include/__stddef_null.h:21:14: note: expanded from macro 'NULL'
   21 | #define NULL __null
      |              ^~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:953:11: note: Calling '_PolynomialData::AddTerm'
  953 |           result->theTerms->AddTerm(nil, mV);
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:257:3: note: Null pointer passed as 2nd argument to memory copy function
  257 |   memcpy(thePowers + actTerms * numberVars, theTerm, sizeof(long) * numberVars);
      |   ^                                         ~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:269:5: warning: Null pointer passed as 1st argument to memory copy function [clang-analyzer-unix.cstring.NullArg]
  269 |     memcpy(thePowers + index * numberVars, theTerm, numberVars * sizeof(long));
      |     ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:803:3: note: 'Default' branch taken. Execution continues on line 810
  803 |   switch (opCode) {     // first check operations without arguments
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:812:3: note: 'Default' branch taken. Execution continues on line 828
  812 |   switch (
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:828:7: note: Assuming 'arg0' is non-null
  828 |   if (arg0) {
      |       ^~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:828:3: note: Taking true branch
  828 |   if (arg0) {
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:829:7: note: Control jumps to 'case 64:'  at line 832
  829 |       switch (opCode) {
      |       ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:833:22: note: Calling '_Polynomial::Raise'
  833 |               return Raise(arg0, cache);
      |                      ^~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2256:7: note: Assuming 'objectT' is not equal to POLYNOMIAL
 2256 |   if (objectT == POLYNOMIAL) {
      |       ^~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2256:3: note: Taking false branch
 2256 |   if (objectT == POLYNOMIAL) {
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2264:7: note: Assuming 'objectT' is equal to NUMBER
 2264 |   if (objectT == NUMBER) { // a number
      |       ^~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2264:3: note: Taking true branch
 2264 |   if (objectT == NUMBER) { // a number
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2265:5: note: Calling '_Polynomial::Convert2OperationForm'
 2265 |     Convert2OperationForm();
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:7: note: Assuming the condition is true
 2476 |   if (compList1.countitems() && !theTerms->thePowers) {
      |       ^~~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:7: note: Left side of '&&' is true
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:33: note: Assuming field 'thePowers' is null
 2476 |   if (compList1.countitems() && !theTerms->thePowers) {
      |                                 ^~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:3: note: Taking true branch
 2476 |   if (compList1.countitems() && !theTerms->thePowers) {
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2479:9: note: Assuming 'n' is <= 1
 2479 |     if (n > 1) {
      |         ^~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2479:5: note: Taking false branch
 2479 |     if (n > 1) {
      |     ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2488:17: note: 'i' is < 'm'
 2488 |     for (i = 0; i < m; i++) { // loop over all commands
      |                 ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2488:5: note: Loop condition is true.  Entering loop body
 2488 |     for (i = 0; i < m; i++) { // loop over all commands
      |     ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2491:11: note: Assuming 'i1' is equal to 'lp'
 2491 |       if (i1 == lp) { // operations with the last var
      |           ^~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2491:7: note: Taking true branch
 2491 |       if (i1 == lp) { // operations with the last var
      |       ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2492:13: note: Assuming 'i2' is <= 0
 2492 |         if (i2 > 0) { // do several iterations
      |             ^~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2492:9: note: Taking false branch
 2492 |         if (i2 > 0) { // do several iterations
      |         ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2498:15: note: Assuming 'i2' is 0
 2498 |           if (!i2) {
      |               ^~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2498:11: note: Taking true branch
 2498 |           if (!i2) {
      |           ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2499:13: note: Calling '_PolynomialData::WriteTerm'
 2499 |             theTerms->WriteTerm(scratch, index);
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:268:7: note: Assuming field 'numberVars' is > 0
  268 |   if (numberVars > 0) {
      |       ^~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:268:3: note: Taking true branch
  268 |   if (numberVars > 0) {
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:269:5: note: Null pointer passed as 1st argument to memory copy function
  269 |     memcpy(thePowers + index * numberVars, theTerm, numberVars * sizeof(long));
      |     ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2415:13: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]
 2415 |             (*cL2) << powerDiff[ch];
      |             ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:803:3: note: Control jumps to 'case 29:'  at line 806
  803 |   switch (opCode) {     // first check operations without arguments
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:807:43: note: Calling '_Polynomial::ComputePolynomial'
  807 |         return _returnConstantOrUseCache (ComputePolynomial(), cache);
      |                                           ^~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2561:3: note: Calling '_Polynomial::Convert2ComputationForm'
 2561 |   Convert2ComputationForm();
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2318:8: note: Assuming the condition is true
 2318 |   if ((theTerms->NumberOfTerms() != 0) &&
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2318:7: note: Left side of '&&' is true
 2318 |   if ((theTerms->NumberOfTerms() != 0) &&
      |       ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2319:8: note: Assuming the condition is true
 2319 |       (compList1.countitems() == 0)) { // stuff to do
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2318:3: note: Taking true branch
 2318 |   if ((theTerms->NumberOfTerms() != 0) &&
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2323:9: note: 'c1' is null
 2323 |     if (c1 && c2 && termsToInclude) {
      |         ^~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2323:12: note: Left side of '&&' is false
 2323 |     if (c1 && c2 && termsToInclude) {
      |            ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2330:19: note: Assuming 'i' is >= field 'actTerms'
 2330 |       for (i = 0; i < theTerms->actTerms; i++) {
      |                   ^~~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2330:7: note: Loop condition is false. Execution continues on line 2333
 2330 |       for (i = 0; i < theTerms->actTerms; i++) {
      |       ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2340:5: note: Taking false branch
 2340 |     if (!theTerms->IsFirstANumber()) {
      |     ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2366:23: note: Storing uninitialized value
 2366 |     long *powerDiff = new long[n + 2];
      |                       ^~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2367:12: note: Assuming 'i' is < 'l'
 2367 |     for (; i < l; i++) { // even more stuff to do
      |            ^~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2367:5: note: Loop condition is true.  Entering loop body
 2367 |     for (; i < l; i++) { // even more stuff to do
      |     ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2371:19: note: 'ch' initialized to -1
 2371 |       long k = 0, ch = -1;
      |                   ^~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2373:19: note: Assuming 'j' is >= 'n'
 2373 |       for (j = 0; j < n; j++, cM++, prevM++) {
      |                   ^~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2373:7: note: Loop condition is false. Execution continues on line 2386
 2373 |       for (j = 0; j < n; j++, cM++, prevM++) {
      |       ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2388:12: note: 'reset' is false
 2388 |       if (!reset) {
      |            ^~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2388:7: note: Taking true branch
 2388 |       if (!reset) {
      |       ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2391:12: note: 'k' is 0
 2391 |       if (!k) {
      |            ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2391:7: note: Taking true branch
 2391 |       if (!k) {
      |       ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2397:11: note: Assuming 'k' is not equal to 1
 2397 |       if (k == 1) {
      |           ^~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2397:7: note: Taking false branch
 2397 |       if (k == 1) {
      |       ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2401:13: note: 's' is <= 0
 2401 |         if (s > 0) {
      |             ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2401:9: note: Taking false branch
 2401 |         if (s > 0) {
      |         ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2406:13: note: Assuming 'k' is <= 0
 2406 |         if (k > 0) {
      |             ^~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2406:9: note: Taking false branch
 2406 |         if (k > 0) {
      |         ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2411:13: note: Assuming 'k' is < 0
 2411 |         if (k < 0) {
      |             ^~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2411:9: note: Taking true branch
 2411 |         if (k < 0) {
      |         ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2413:15: note: Assuming the condition is true
 2413 |           if (k == -1) { // change in exactly one variable
      |               ^~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2413:11: note: Taking true branch
 2413 |           if (k == -1) { // change in exactly one variable
      |           ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2415:13: note: 1st function call argument is an uninitialized value
 2415 |             (*cL2) << powerDiff[ch];
      |             ^         ~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2421:11: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]
 2421 |           (*cL2) << -powerDiff[ch];
      |           ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:803:3: note: Control jumps to 'case 29:'  at line 806
  803 |   switch (opCode) {     // first check operations without arguments
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:807:43: note: Calling '_Polynomial::ComputePolynomial'
  807 |         return _returnConstantOrUseCache (ComputePolynomial(), cache);
      |                                           ^~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2561:3: note: Calling '_Polynomial::Convert2ComputationForm'
 2561 |   Convert2ComputationForm();
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2318:8: note: Assuming the condition is true
 2318 |   if ((theTerms->NumberOfTerms() != 0) &&
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2318:7: note: Left side of '&&' is true
 2318 |   if ((theTerms->NumberOfTerms() != 0) &&
      |       ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2319:8: note: Assuming the condition is true
 2319 |       (compList1.countitems() == 0)) { // stuff to do
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2318:3: note: Taking true branch
 2318 |   if ((theTerms->NumberOfTerms() != 0) &&
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2323:9: note: 'c1' is null
 2323 |     if (c1 && c2 && termsToInclude) {
      |         ^~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2323:12: note: Left side of '&&' is false
 2323 |     if (c1 && c2 && termsToInclude) {
      |            ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2330:19: note: Assuming 'i' is >= field 'actTerms'
 2330 |       for (i = 0; i < theTerms->actTerms; i++) {
      |                   ^~~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2330:7: note: Loop condition is false. Execution continues on line 2333
 2330 |       for (i = 0; i < theTerms->actTerms; i++) {
      |       ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2340:5: note: Taking false branch
 2340 |     if (!theTerms->IsFirstANumber()) {
      |     ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2367:12: note: Assuming 'i' is < 'l'
 2367 |     for (; i < l; i++) { // even more stuff to do
      |            ^~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2367:5: note: Loop condition is true.  Entering loop body
 2367 |     for (; i < l; i++) { // even more stuff to do
      |     ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2373:19: note: Assuming 'j' is >= 'n'
 2373 |       for (j = 0; j < n; j++, cM++, prevM++) {
      |                   ^~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2373:7: note: Loop condition is false. Execution continues on line 2386
 2373 |       for (j = 0; j < n; j++, cM++, prevM++) {
      |       ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2388:12: note: 'reset' is false
 2388 |       if (!reset) {
      |            ^~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2388:7: note: Taking true branch
 2388 |       if (!reset) {
      |       ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2391:12: note: 'k' is 0
 2391 |       if (!k) {
      |            ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2391:7: note: Taking true branch
 2391 |       if (!k) {
      |       ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2397:11: note: Assuming 'k' is not equal to 1
 2397 |       if (k == 1) {
      |           ^~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2397:7: note: Taking false branch
 2397 |       if (k == 1) {
      |       ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2401:13: note: 's' is <= 0
 2401 |         if (s > 0) {
      |             ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2401:9: note: Taking false branch
 2401 |         if (s > 0) {
      |         ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2406:13: note: Assuming 'k' is <= 0
 2406 |         if (k > 0) {
      |             ^~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2406:9: note: Taking false branch
 2406 |         if (k > 0) {
      |         ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2411:13: note: Assuming 'k' is < 0
 2411 |         if (k < 0) {
      |             ^~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2411:9: note: Taking true branch
 2411 |         if (k < 0) {
      |         ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2413:15: note: Assuming the condition is false
 2413 |           if (k == -1) { // change in exactly one variable
      |               ^~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2413:11: note: Taking false branch
 2413 |           if (k == -1) { // change in exactly one variable
      |           ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2420:22: note: Assuming 'reset' is false
 2420 |           (*cL1) << (reset ? ch : -ch - 1);
      |                      ^~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2420:22: note: '?' condition is false
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2421:11: note: 1st function call argument is an uninitialized value
 2421 |           (*cL2) << -powerDiff[ch];
      |           ^         ~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2494:13: warning: Array access (from variable 'scratch') results in a null pointer dereference [clang-analyzer-core.NullDereference]
 2494 |             scratch[lp]++;
      |             ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:803:3: note: 'Default' branch taken. Execution continues on line 810
  803 |   switch (opCode) {     // first check operations without arguments
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:812:3: note: 'Default' branch taken. Execution continues on line 828
  812 |   switch (
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:828:7: note: Assuming 'arg0' is non-null
  828 |   if (arg0) {
      |       ^~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:828:3: note: Taking true branch
  828 |   if (arg0) {
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:829:7: note: Control jumps to 'case 64:'  at line 832
  829 |       switch (opCode) {
      |       ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:833:22: note: Calling '_Polynomial::Raise'
  833 |               return Raise(arg0, cache);
      |                      ^~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2256:7: note: Assuming 'objectT' is not equal to POLYNOMIAL
 2256 |   if (objectT == POLYNOMIAL) {
      |       ^~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2256:3: note: Taking false branch
 2256 |   if (objectT == POLYNOMIAL) {
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2264:7: note: Assuming 'objectT' is equal to NUMBER
 2264 |   if (objectT == NUMBER) { // a number
      |       ^~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2264:3: note: Taking true branch
 2264 |   if (objectT == NUMBER) { // a number
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2265:5: note: Calling '_Polynomial::Convert2OperationForm'
 2265 |     Convert2OperationForm();
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:7: note: Assuming the condition is true
 2476 |   if (compList1.countitems() && !theTerms->thePowers) {
      |       ^~~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:7: note: Left side of '&&' is true
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:33: note: Assuming field 'thePowers' is null
 2476 |   if (compList1.countitems() && !theTerms->thePowers) {
      |                                 ^~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:3: note: Taking true branch
 2476 |   if (compList1.countitems() && !theTerms->thePowers) {
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2478:34: note: 'scratch' initialized to a null pointer value
 2478 |     long i1, i2, i, lp = n - 2, *scratch = nil, index = 0;
      |                                  ^~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2479:9: note: Assuming 'n' is <= 1
 2479 |     if (n > 1) {
      |         ^~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2479:5: note: Taking false branch
 2479 |     if (n > 1) {
      |     ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2488:17: note: 'i' is < 'm'
 2488 |     for (i = 0; i < m; i++) { // loop over all commands
      |                 ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2488:5: note: Loop condition is true.  Entering loop body
 2488 |     for (i = 0; i < m; i++) { // loop over all commands
      |     ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2491:11: note: Assuming 'i1' is equal to 'lp'
 2491 |       if (i1 == lp) { // operations with the last var
      |           ^~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2491:7: note: Taking true branch
 2491 |       if (i1 == lp) { // operations with the last var
      |       ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2492:13: note: Assuming 'i2' is > 0
 2492 |         if (i2 > 0) { // do several iterations
      |             ^~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2492:9: note: Taking true branch
 2492 |         if (i2 > 0) { // do several iterations
      |         ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2493:28: note: 'k' is < 'i2'
 2493 |           for (long k = 0; k < i2; k++, index++) {
      |                            ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2493:11: note: Loop condition is true.  Entering loop body
 2493 |           for (long k = 0; k < i2; k++, index++) {
      |           ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2494:13: note: Array access (from variable 'scratch') results in a null pointer dereference
 2494 |             scratch[lp]++;
      |             ^~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2501:25: warning: Array access (from variable 'scratch') results in a null pointer dereference [clang-analyzer-core.NullDereference]
 2501 |             scratch[lp] -= i2;
      |                         ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:803:3: note: 'Default' branch taken. Execution continues on line 810
  803 |   switch (opCode) {     // first check operations without arguments
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:812:3: note: 'Default' branch taken. Execution continues on line 828
  812 |   switch (
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:828:7: note: Assuming 'arg0' is non-null
  828 |   if (arg0) {
      |       ^~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:828:3: note: Taking true branch
  828 |   if (arg0) {
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:829:7: note: Control jumps to 'case 64:'  at line 832
  829 |       switch (opCode) {
      |       ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:833:22: note: Calling '_Polynomial::Raise'
  833 |               return Raise(arg0, cache);
      |                      ^~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2256:7: note: Assuming 'objectT' is not equal to POLYNOMIAL
 2256 |   if (objectT == POLYNOMIAL) {
      |       ^~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2256:3: note: Taking false branch
 2256 |   if (objectT == POLYNOMIAL) {
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2264:7: note: Assuming 'objectT' is equal to NUMBER
 2264 |   if (objectT == NUMBER) { // a number
      |       ^~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2264:3: note: Taking true branch
 2264 |   if (objectT == NUMBER) { // a number
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2265:5: note: Calling '_Polynomial::Convert2OperationForm'
 2265 |     Convert2OperationForm();
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:7: note: Assuming the condition is true
 2476 |   if (compList1.countitems() && !theTerms->thePowers) {
      |       ^~~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:7: note: Left side of '&&' is true
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:33: note: Assuming field 'thePowers' is null
 2476 |   if (compList1.countitems() && !theTerms->thePowers) {
      |                                 ^~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:3: note: Taking true branch
 2476 |   if (compList1.countitems() && !theTerms->thePowers) {
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2478:34: note: 'scratch' initialized to a null pointer value
 2478 |     long i1, i2, i, lp = n - 2, *scratch = nil, index = 0;
      |                                  ^~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2479:9: note: Assuming 'n' is <= 1
 2479 |     if (n > 1) {
      |         ^~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2479:5: note: Taking false branch
 2479 |     if (n > 1) {
      |     ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2488:17: note: 'i' is < 'm'
 2488 |     for (i = 0; i < m; i++) { // loop over all commands
      |                 ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2488:5: note: Loop condition is true.  Entering loop body
 2488 |     for (i = 0; i < m; i++) { // loop over all commands
      |     ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2491:11: note: Assuming 'i1' is equal to 'lp'
 2491 |       if (i1 == lp) { // operations with the last var
      |           ^~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2491:7: note: Taking true branch
 2491 |       if (i1 == lp) { // operations with the last var
      |       ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2492:13: note: Assuming 'i2' is <= 0
 2492 |         if (i2 > 0) { // do several iterations
      |             ^~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2492:9: note: Taking false branch
 2492 |         if (i2 > 0) { // do several iterations
      |         ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2498:15: note: Assuming 'i2' is not equal to 0
 2498 |           if (!i2) {
      |               ^~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2498:11: note: Taking false branch
 2498 |           if (!i2) {
      |           ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2501:25: note: Array access (from variable 'scratch') results in a null pointer dereference
 2501 |             scratch[lp] -= i2;
      |             ~~~~~~~     ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2514:13: warning: Array access (from variable 'scratch') results in a null pointer dereference [clang-analyzer-core.NullDereference]
 2514 |             scratch[i1]++;
      |             ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:803:3: note: 'Default' branch taken. Execution continues on line 810
  803 |   switch (opCode) {     // first check operations without arguments
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:812:3: note: 'Default' branch taken. Execution continues on line 828
  812 |   switch (
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:828:7: note: Assuming 'arg0' is non-null
  828 |   if (arg0) {
      |       ^~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:828:3: note: Taking true branch
  828 |   if (arg0) {
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:829:7: note: Control jumps to 'case 64:'  at line 832
  829 |       switch (opCode) {
      |       ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:833:22: note: Calling '_Polynomial::Raise'
  833 |               return Raise(arg0, cache);
      |                      ^~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2256:7: note: Assuming 'objectT' is not equal to POLYNOMIAL
 2256 |   if (objectT == POLYNOMIAL) {
      |       ^~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2256:3: note: Taking false branch
 2256 |   if (objectT == POLYNOMIAL) {
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2264:7: note: Assuming 'objectT' is equal to NUMBER
 2264 |   if (objectT == NUMBER) { // a number
      |       ^~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2264:3: note: Taking true branch
 2264 |   if (objectT == NUMBER) { // a number
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2265:5: note: Calling '_Polynomial::Convert2OperationForm'
 2265 |     Convert2OperationForm();
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:7: note: Assuming the condition is true
 2476 |   if (compList1.countitems() && !theTerms->thePowers) {
      |       ^~~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:7: note: Left side of '&&' is true
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:33: note: Assuming field 'thePowers' is null
 2476 |   if (compList1.countitems() && !theTerms->thePowers) {
      |                                 ^~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:3: note: Taking true branch
 2476 |   if (compList1.countitems() && !theTerms->thePowers) {
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2478:34: note: 'scratch' initialized to a null pointer value
 2478 |     long i1, i2, i, lp = n - 2, *scratch = nil, index = 0;
      |                                  ^~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2479:9: note: Assuming 'n' is <= 1
 2479 |     if (n > 1) {
      |         ^~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2479:5: note: Taking false branch
 2479 |     if (n > 1) {
      |     ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2488:17: note: 'i' is < 'm'
 2488 |     for (i = 0; i < m; i++) { // loop over all commands
      |                 ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2488:5: note: Loop condition is true.  Entering loop body
 2488 |     for (i = 0; i < m; i++) { // loop over all commands
      |     ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2491:11: note: Assuming 'i1' is not equal to 'lp'
 2491 |       if (i1 == lp) { // operations with the last var
      |           ^~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2491:7: note: Taking false branch
 2491 |       if (i1 == lp) { // operations with the last var
      |       ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2507:13: note: Assuming 'i1' is < 0
 2507 |         if (i1 < 0) {
      |             ^~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2507:9: note: Taking true branch
 2507 |         if (i1 < 0) {
      |         ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2508:26: note: Assuming 'i2' is >= 0
 2508 |           bool compute = i2 < 0;
      |                          ^~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2510:15: note: 'i2' is >= 0
 2510 |           if (i2 < 0) {
      |               ^~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2510:11: note: Taking false branch
 2510 |           if (i2 < 0) {
      |           ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2513:15: note: Assuming 'i2' is equal to 1
 2513 |           if (i2 == 1) {
      |               ^~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2513:11: note: Taking true branch
 2513 |           if (i2 == 1) {
      |           ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2514:13: note: Array access (from variable 'scratch') results in a null pointer dereference
 2514 |             scratch[i1]++;
      |             ^~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2516:25: warning: Array access (from variable 'scratch') results in a null pointer dereference [clang-analyzer-core.NullDereference]
 2516 |             scratch[i1] += i2;
      |                         ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:803:3: note: 'Default' branch taken. Execution continues on line 810
  803 |   switch (opCode) {     // first check operations without arguments
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:812:3: note: 'Default' branch taken. Execution continues on line 828
  812 |   switch (
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:828:7: note: Assuming 'arg0' is non-null
  828 |   if (arg0) {
      |       ^~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:828:3: note: Taking true branch
  828 |   if (arg0) {
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:829:7: note: Control jumps to 'case 64:'  at line 832
  829 |       switch (opCode) {
      |       ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:833:22: note: Calling '_Polynomial::Raise'
  833 |               return Raise(arg0, cache);
      |                      ^~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2256:7: note: Assuming 'objectT' is not equal to POLYNOMIAL
 2256 |   if (objectT == POLYNOMIAL) {
      |       ^~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2256:3: note: Taking false branch
 2256 |   if (objectT == POLYNOMIAL) {
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2264:7: note: Assuming 'objectT' is equal to NUMBER
 2264 |   if (objectT == NUMBER) { // a number
      |       ^~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2264:3: note: Taking true branch
 2264 |   if (objectT == NUMBER) { // a number
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2265:5: note: Calling '_Polynomial::Convert2OperationForm'
 2265 |     Convert2OperationForm();
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:7: note: Assuming the condition is true
 2476 |   if (compList1.countitems() && !theTerms->thePowers) {
      |       ^~~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:7: note: Left side of '&&' is true
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:33: note: Assuming field 'thePowers' is null
 2476 |   if (compList1.countitems() && !theTerms->thePowers) {
      |                                 ^~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:3: note: Taking true branch
 2476 |   if (compList1.countitems() && !theTerms->thePowers) {
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2478:34: note: 'scratch' initialized to a null pointer value
 2478 |     long i1, i2, i, lp = n - 2, *scratch = nil, index = 0;
      |                                  ^~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2479:9: note: Assuming 'n' is <= 1
 2479 |     if (n > 1) {
      |         ^~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2479:5: note: Taking false branch
 2479 |     if (n > 1) {
      |     ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2488:17: note: 'i' is < 'm'
 2488 |     for (i = 0; i < m; i++) { // loop over all commands
      |                 ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2488:5: note: Loop condition is true.  Entering loop body
 2488 |     for (i = 0; i < m; i++) { // loop over all commands
      |     ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2491:11: note: Assuming 'i1' is not equal to 'lp'
 2491 |       if (i1 == lp) { // operations with the last var
      |           ^~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2491:7: note: Taking false branch
 2491 |       if (i1 == lp) { // operations with the last var
      |       ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2507:13: note: Assuming 'i1' is < 0
 2507 |         if (i1 < 0) {
      |             ^~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2507:9: note: Taking true branch
 2507 |         if (i1 < 0) {
      |         ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2508:26: note: Assuming 'i2' is >= 0
 2508 |           bool compute = i2 < 0;
      |                          ^~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2510:15: note: 'i2' is >= 0
 2510 |           if (i2 < 0) {
      |               ^~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2510:11: note: Taking false branch
 2510 |           if (i2 < 0) {
      |           ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2513:15: note: Assuming 'i2' is not equal to 1
 2513 |           if (i2 == 1) {
      |               ^~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2513:11: note: Taking false branch
 2513 |           if (i2 == 1) {
      |           ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2516:25: note: Array access (from variable 'scratch') results in a null pointer dereference
 2516 |             scratch[i1] += i2;
      |             ~~~~~~~     ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2526:24: warning: Array access (from variable 'scratch') results in a null pointer dereference [clang-analyzer-core.NullDereference]
 2526 |             scratch[k] = 0;
      |                        ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:803:3: note: 'Default' branch taken. Execution continues on line 810
  803 |   switch (opCode) {     // first check operations without arguments
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:812:3: note: 'Default' branch taken. Execution continues on line 828
  812 |   switch (
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:828:7: note: Assuming 'arg0' is non-null
  828 |   if (arg0) {
      |       ^~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:828:3: note: Taking true branch
  828 |   if (arg0) {
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:829:7: note: Control jumps to 'case 64:'  at line 832
  829 |       switch (opCode) {
      |       ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:833:22: note: Calling '_Polynomial::Raise'
  833 |               return Raise(arg0, cache);
      |                      ^~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2256:7: note: Assuming 'objectT' is not equal to POLYNOMIAL
 2256 |   if (objectT == POLYNOMIAL) {
      |       ^~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2256:3: note: Taking false branch
 2256 |   if (objectT == POLYNOMIAL) {
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2264:7: note: Assuming 'objectT' is equal to NUMBER
 2264 |   if (objectT == NUMBER) { // a number
      |       ^~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2264:3: note: Taking true branch
 2264 |   if (objectT == NUMBER) { // a number
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2265:5: note: Calling '_Polynomial::Convert2OperationForm'
 2265 |     Convert2OperationForm();
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:7: note: Assuming the condition is true
 2476 |   if (compList1.countitems() && !theTerms->thePowers) {
      |       ^~~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:7: note: Left side of '&&' is true
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:33: note: Assuming field 'thePowers' is null
 2476 |   if (compList1.countitems() && !theTerms->thePowers) {
      |                                 ^~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:3: note: Taking true branch
 2476 |   if (compList1.countitems() && !theTerms->thePowers) {
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2478:34: note: 'scratch' initialized to a null pointer value
 2478 |     long i1, i2, i, lp = n - 2, *scratch = nil, index = 0;
      |                                  ^~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2479:9: note: Assuming 'n' is <= 1
 2479 |     if (n > 1) {
      |         ^~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2479:5: note: Taking false branch
 2479 |     if (n > 1) {
      |     ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2488:17: note: 'i' is < 'm'
 2488 |     for (i = 0; i < m; i++) { // loop over all commands
      |                 ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2488:5: note: Loop condition is true.  Entering loop body
 2488 |     for (i = 0; i < m; i++) { // loop over all commands
      |     ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2491:11: note: Assuming 'i1' is not equal to 'lp'
 2491 |       if (i1 == lp) { // operations with the last var
      |           ^~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2491:7: note: Taking false branch
 2491 |       if (i1 == lp) { // operations with the last var
      |       ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2507:13: note: Assuming 'i1' is >= 0
 2507 |         if (i1 < 0) {
      |             ^~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2507:9: note: Taking false branch
 2507 |         if (i1 < 0) {
      |         ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2524:26: note: Assuming 'i2' is >= 0
 2524 |           bool compute = i2 < 0;
      |                          ^~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2525:33: note: Assuming 'k' is <= 'lp'
 2525 |           for (long k = i1 + 1; k <= lp; k++) {
      |                                 ^~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2525:11: note: Loop condition is true.  Entering loop body
 2525 |           for (long k = i1 + 1; k <= lp; k++) {
      |           ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2526:24: note: Array access (from variable 'scratch') results in a null pointer dereference
 2526 |             scratch[k] = 0;
      |             ~~~~~~~    ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2532:13: warning: Array access (from variable 'scratch') results in a null pointer dereference [clang-analyzer-core.NullDereference]
 2532 |             scratch[i1]++;
      |             ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:803:3: note: 'Default' branch taken. Execution continues on line 810
  803 |   switch (opCode) {     // first check operations without arguments
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:812:3: note: 'Default' branch taken. Execution continues on line 828
  812 |   switch (
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:828:7: note: Assuming 'arg0' is non-null
  828 |   if (arg0) {
      |       ^~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:828:3: note: Taking true branch
  828 |   if (arg0) {
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:829:7: note: Control jumps to 'case 64:'  at line 832
  829 |       switch (opCode) {
      |       ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:833:22: note: Calling '_Polynomial::Raise'
  833 |               return Raise(arg0, cache);
      |                      ^~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2256:7: note: Assuming 'objectT' is not equal to POLYNOMIAL
 2256 |   if (objectT == POLYNOMIAL) {
      |       ^~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2256:3: note: Taking false branch
 2256 |   if (objectT == POLYNOMIAL) {
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2264:7: note: Assuming 'objectT' is equal to NUMBER
 2264 |   if (objectT == NUMBER) { // a number
      |       ^~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2264:3: note: Taking true branch
 2264 |   if (objectT == NUMBER) { // a number
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2265:5: note: Calling '_Polynomial::Convert2OperationForm'
 2265 |     Convert2OperationForm();
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:7: note: Assuming the condition is true
 2476 |   if (compList1.countitems() && !theTerms->thePowers) {
      |       ^~~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:7: note: Left side of '&&' is true
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:33: note: Assuming field 'thePowers' is null
 2476 |   if (compList1.countitems() && !theTerms->thePowers) {
      |                                 ^~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:3: note: Taking true branch
 2476 |   if (compList1.countitems() && !theTerms->thePowers) {
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2478:34: note: 'scratch' initialized to a null pointer value
 2478 |     long i1, i2, i, lp = n - 2, *scratch = nil, index = 0;
      |                                  ^~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2479:9: note: Assuming 'n' is <= 1
 2479 |     if (n > 1) {
      |         ^~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2479:5: note: Taking false branch
 2479 |     if (n > 1) {
      |     ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2488:17: note: 'i' is < 'm'
 2488 |     for (i = 0; i < m; i++) { // loop over all commands
      |                 ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2488:5: note: Loop condition is true.  Entering loop body
 2488 |     for (i = 0; i < m; i++) { // loop over all commands
      |     ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2491:11: note: Assuming 'i1' is not equal to 'lp'
 2491 |       if (i1 == lp) { // operations with the last var
      |           ^~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2491:7: note: Taking false branch
 2491 |       if (i1 == lp) { // operations with the last var
      |       ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2507:13: note: Assuming 'i1' is >= 0
 2507 |         if (i1 < 0) {
      |             ^~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2507:9: note: Taking false branch
 2507 |         if (i1 < 0) {
      |         ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2524:26: note: Assuming 'i2' is >= 0
 2524 |           bool compute = i2 < 0;
      |                          ^~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2525:33: note: Assuming 'k' is > 'lp'
 2525 |           for (long k = i1 + 1; k <= lp; k++) {
      |                                 ^~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2525:11: note: Loop condition is false. Execution continues on line 2528
 2525 |           for (long k = i1 + 1; k <= lp; k++) {
      |           ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2528:15: note: 'i2' is >= 0
 2528 |           if (i2 < 0) {
      |               ^~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2528:11: note: Taking false branch
 2528 |           if (i2 < 0) {
      |           ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2531:15: note: Assuming 'i2' is equal to 1
 2531 |           if (i2 == 1) {
      |               ^~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2531:11: note: Taking true branch
 2531 |           if (i2 == 1) {
      |           ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2532:13: note: Array access (from variable 'scratch') results in a null pointer dereference
 2532 |             scratch[i1]++;
      |             ^~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2534:25: warning: Array access (from variable 'scratch') results in a null pointer dereference [clang-analyzer-core.NullDereference]
 2534 |             scratch[i1] += i2;
      |                         ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:803:3: note: 'Default' branch taken. Execution continues on line 810
  803 |   switch (opCode) {     // first check operations without arguments
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:812:3: note: 'Default' branch taken. Execution continues on line 828
  812 |   switch (
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:828:7: note: Assuming 'arg0' is non-null
  828 |   if (arg0) {
      |       ^~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:828:3: note: Taking true branch
  828 |   if (arg0) {
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:829:7: note: Control jumps to 'case 64:'  at line 832
  829 |       switch (opCode) {
      |       ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:833:22: note: Calling '_Polynomial::Raise'
  833 |               return Raise(arg0, cache);
      |                      ^~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2256:7: note: Assuming 'objectT' is not equal to POLYNOMIAL
 2256 |   if (objectT == POLYNOMIAL) {
      |       ^~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2256:3: note: Taking false branch
 2256 |   if (objectT == POLYNOMIAL) {
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2264:7: note: Assuming 'objectT' is equal to NUMBER
 2264 |   if (objectT == NUMBER) { // a number
      |       ^~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2264:3: note: Taking true branch
 2264 |   if (objectT == NUMBER) { // a number
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2265:5: note: Calling '_Polynomial::Convert2OperationForm'
 2265 |     Convert2OperationForm();
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:7: note: Assuming the condition is true
 2476 |   if (compList1.countitems() && !theTerms->thePowers) {
      |       ^~~~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:7: note: Left side of '&&' is true
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:33: note: Assuming field 'thePowers' is null
 2476 |   if (compList1.countitems() && !theTerms->thePowers) {
      |                                 ^~~~~~~~~~~~~~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2476:3: note: Taking true branch
 2476 |   if (compList1.countitems() && !theTerms->thePowers) {
      |   ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2478:34: note: 'scratch' initialized to a null pointer value
 2478 |     long i1, i2, i, lp = n - 2, *scratch = nil, index = 0;
      |                                  ^~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2479:9: note: Assuming 'n' is <= 1
 2479 |     if (n > 1) {
      |         ^~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2479:5: note: Taking false branch
 2479 |     if (n > 1) {
      |     ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2488:17: note: 'i' is < 'm'
 2488 |     for (i = 0; i < m; i++) { // loop over all commands
      |                 ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2488:5: note: Loop condition is true.  Entering loop body
 2488 |     for (i = 0; i < m; i++) { // loop over all commands
      |     ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2491:11: note: Assuming 'i1' is not equal to 'lp'
 2491 |       if (i1 == lp) { // operations with the last var
      |           ^~~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2491:7: note: Taking false branch
 2491 |       if (i1 == lp) { // operations with the last var
      |       ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2507:13: note: Assuming 'i1' is >= 0
 2507 |         if (i1 < 0) {
      |             ^~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2507:9: note: Taking false branch
 2507 |         if (i1 < 0) {
      |         ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2524:26: note: Assuming 'i2' is >= 0
 2524 |           bool compute = i2 < 0;
      |                          ^~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2525:33: note: Assuming 'k' is > 'lp'
 2525 |           for (long k = i1 + 1; k <= lp; k++) {
      |                                 ^~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2525:11: note: Loop condition is false. Execution continues on line 2528
 2525 |           for (long k = i1 + 1; k <= lp; k++) {
      |           ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2528:15: note: 'i2' is >= 0
 2528 |           if (i2 < 0) {
      |               ^~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2528:11: note: Taking false branch
 2528 |           if (i2 < 0) {
      |           ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2531:15: note: Assuming 'i2' is not equal to 1
 2531 |           if (i2 == 1) {
      |               ^~~~~~~
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2531:11: note: Taking false branch
 2531 |           if (i2 == 1) {
      |           ^
/Users/sergei/Development/hyphy/src/core/polynoml.cpp:2534:25: note: Array access (from variable 'scratch') results in a null pointer dereference
 2534 |             scratch[i1] += i2;
      |             ~~~~~~~     ^
